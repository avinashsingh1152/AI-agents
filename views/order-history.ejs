<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order History - <%= sellerData.profile.businessName %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .dashboard-header {
            background: linear-gradient(135deg, #2874f0, #1a5bb8);
            color: white;
            padding: 20px 0;
            margin-bottom: 30px;
        }
        
        .stats-card {
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            margin-bottom: 20px;
            transition: transform 0.3s ease;
        }
        
        .stats-card:hover {
            transform: translateY(-5px);
        }
        
        .stats-icon {
            font-size: 2.5rem;
            margin-bottom: 15px;
        }
        
        .stats-number {
            font-size: 2rem;
            font-weight: bold;
            color: #2874f0;
        }
        
        .stats-label {
            color: #666;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 1px;
        }
        
        .filter-section {
            background: white;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }
        
        .order-card {
            background: white;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.1);
            margin-bottom: 15px;
            transition: all 0.3s ease;
            border-left: 4px solid #2874f0;
        }
        
        .order-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 20px rgba(0,0,0,0.15);
        }
        
        .order-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .order-id {
            font-size: 1.2rem;
            font-weight: bold;
            color: #2874f0;
        }
        
        .order-date {
            color: #666;
            font-size: 0.9rem;
        }
        
        .order-amount {
            font-size: 1.3rem;
            font-weight: bold;
            color: #28a745;
        }
        
        .status-badge {
            padding: 5px 12px;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: 500;
        }
        
        .status-processing { background: #f8d7da; color: #721c24; }
        .status-shipped { background: #d1ecf1; color: #0c5460; }
        .status-delivered { background: #d4edda; color: #155724; }
        .status-cancelled { background: #f8d7da; color: #721c24; }
        .status-pending { background: #fff3cd; color: #856404; }
        .status-confirmed { background: #fff3cd; color: #856404; }
        .status-returned { background: #f8d7da; color: #721c24; }
        
        .payment-status {
            padding: 3px 8px;
            border-radius: 10px;
            font-size: 0.7rem;
            font-weight: 500;
        }
        
        .payment-pending { background: #fff3cd; color: #856404; }
        .payment-paid { background: #d4edda; color: #155724; }
        .payment-failed { background: #f8d7da; color: #721c24; }
        
        .btn-flipkart {
            background: #2874f0;
            border: none;
            color: white;
            padding: 8px 20px;
            border-radius: 20px;
            transition: all 0.3s ease;
        }
        
        .btn-flipkart:hover {
            background: #1a5bb8;
            transform: translateY(-2px);
        }
        
        .btn-danger {
            background: #dc3545;
            border: none;
            color: white;
            padding: 8px 20px;
            border-radius: 20px;
            transition: all 0.3s ease;
        }
        
        .btn-danger:hover {
            background: #c82333;
            transform: translateY(-2px);
        }
        
        .modal-content {
            border-radius: 15px;
        }
        
        .modal-header {
            background: #2874f0;
            color: white;
            border-radius: 15px 15px 0 0;
        }
        
        .form-control {
            border-radius: 10px;
            border: 1px solid #e1e5e9;
        }
        
        .form-control:focus {
            border-color: #2874f0;
            box-shadow: 0 0 0 0.2rem rgba(40, 116, 240, 0.25);
        }
        
        .pagination {
            justify-content: center;
            margin-top: 30px;
        }
        
        .page-link {
            color: #2874f0;
            border-radius: 10px;
            margin: 0 2px;
        }
        
        .page-link:hover {
            background: #2874f0;
            color: white;
        }
        
        .page-item.active .page-link {
            background: #2874f0;
            border-color: #2874f0;
        }
        
        .loading {
            text-align: center;
            padding: 50px;
            color: #666;
        }
        
        .no-orders {
            text-align: center;
            padding: 50px;
            color: #666;
        }
        
        .no-orders i {
            font-size: 4rem;
            color: #ddd;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <!-- Dashboard Header -->
    <div class="dashboard-header">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h2><i class="fas fa-history"></i> Order History</h2>
                    <p class="mb-0">Manage and track all your orders</p>
                </div>
                <div class="col-md-4 text-end">
                    <div class="d-flex justify-content-end align-items-center">
                        <a href="/seller-dashboard" class="btn btn-outline-light me-2">
                            <i class="fas fa-tachometer-alt"></i> Dashboard
                        </a>
                        <button class="btn btn-outline-light me-2" onclick="showAddOrderModal()">
                            <i class="fas fa-plus"></i> Add Order
                        </button>
                        <a href="/logout" class="btn btn-outline-light">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <!-- Statistics Section -->
        <div class="row mb-4" id="statsSection">
            <div class="col-md-3">
                <div class="stats-card text-center">
                    <div class="stats-icon text-primary">
                        <i class="fas fa-shopping-bag"></i>
                    </div>
                    <div class="stats-number" id="totalOrders">-</div>
                    <div class="stats-label">Total Orders</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stats-card text-center">
                    <div class="stats-icon text-success">
                        <i class="fas fa-rupee-sign"></i>
                    </div>
                    <div class="stats-number" id="totalRevenue">-</div>
                    <div class="stats-label">Total Revenue</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stats-card text-center">
                    <div class="stats-icon text-warning">
                        <i class="fas fa-clock"></i>
                    </div>
                    <div class="stats-number" id="processingOrders">-</div>
                    <div class="stats-label">Processing</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stats-card text-center">
                    <div class="stats-icon text-info">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <div class="stats-number" id="deliveredOrders">-</div>
                    <div class="stats-label">Delivered</div>
                </div>
            </div>
        </div>

        <!-- Filters Section -->
        <div class="filter-section">
            <div class="row">
                <div class="col-md-3">
                    <label class="form-label">Order Status</label>
                    <select class="form-control" id="statusFilter">
                        <option value="">All Status</option>
                        <option value="processing">Processing</option>
                        <option value="confirmed">Confirmed</option>
                        <option value="shipped">Shipped</option>
                        <option value="delivered">Delivered</option>
                        <option value="cancelled">Cancelled</option>
                        <option value="returned">Returned</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Payment Status</label>
                    <select class="form-control" id="paymentFilter">
                        <option value="">All Payments</option>
                        <option value="pending">Pending</option>
                        <option value="paid">Paid</option>
                        <option value="failed">Failed</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Date From</label>
                    <input type="date" class="form-control" id="dateFromFilter">
                </div>
                <div class="col-md-3">
                    <label class="form-label">Date To</label>
                    <input type="date" class="form-control" id="dateToFilter">
                </div>
            </div>
            <div class="row mt-3">
                <div class="col-md-6">
                    <input type="text" class="form-control" id="searchInput" placeholder="Search by order ID, customer name...">
                </div>
                <div class="col-md-6 text-end">
                    <button class="btn btn-flipkart" onclick="applyFilters()">
                        <i class="fas fa-filter"></i> Apply Filters
                    </button>
                    <button class="btn btn-outline-secondary" onclick="clearFilters()">
                        <i class="fas fa-times"></i> Clear
                    </button>
                </div>
            </div>
        </div>

        <!-- Orders List -->
        <div id="ordersContainer">
            <div class="loading">
                <i class="fas fa-spinner fa-spin"></i>
                <p>Loading orders...</p>
            </div>
        </div>

        <!-- Pagination -->
        <nav aria-label="Order history pagination">
            <ul class="pagination" id="pagination">
            </ul>
        </nav>
    </div>

    <!-- Add/Edit Order Modal -->
    <div class="modal fade" id="orderModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="orderModalTitle">Add New Order</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="orderForm">
                        <input type="hidden" id="orderId">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Order ID</label>
                                    <input type="text" class="form-control" id="orderIdInput" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Order Date</label>
                                    <input type="date" class="form-control" id="orderDate" required>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Customer Name</label>
                                    <input type="text" class="form-control" id="customerName" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Customer Email</label>
                                    <input type="email" class="form-control" id="customerEmail">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Customer Phone</label>
                                    <input type="tel" class="form-control" id="customerPhone">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Payment Method</label>
                                    <select class="form-control" id="paymentMethod">
                                        <option value="online">Online Payment</option>
                                        <option value="cod">Cash on Delivery</option>
                                        <option value="upi">UPI</option>
                                        <option value="card">Credit/Debit Card</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Order Status</label>
                                    <select class="form-control" id="orderStatus" required>
                                        <option value="processing">Processing</option>
                                        <option value="confirmed">Confirmed</option>
                                        <option value="shipped">Shipped</option>
                                        <option value="delivered">Delivered</option>
                                        <option value="cancelled">Cancelled</option>
                                        <option value="returned">Returned</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Payment Status</label>
                                    <select class="form-control" id="paymentStatus" required>
                                        <option value="pending">Pending</option>
                                        <option value="paid">Paid</option>
                                        <option value="failed">Failed</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label">Total Amount</label>
                                    <input type="number" class="form-control" id="totalAmount" step="0.01" required>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label">Tax Amount</label>
                                    <input type="number" class="form-control" id="taxAmount" step="0.01" value="0">
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label">Shipping Amount</label>
                                    <input type="number" class="form-control" id="shippingAmount" step="0.01" value="0">
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Shipping Address</label>
                            <textarea class="form-control" id="shippingAddress" rows="2"></textarea>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Notes</label>
                            <textarea class="form-control" id="orderNotes" rows="2"></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-flipkart" onclick="saveOrder()">Save Order</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this order? This action cannot be undone.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" onclick="confirmDelete()">Delete Order</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let currentPage = 1;
        let ordersPerPage = 10;
        let allOrders = [];
        let filteredOrders = [];
        let orderToDelete = null;

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            loadOrderStats();
            loadOrders();
            
            // Set default date to today
            document.getElementById('orderDate').value = new Date().toISOString().split('T')[0];
        });

        // Load order statistics
        async function loadOrderStats() {
            try {
                const response = await fetch('/api/order-history-stats');
                const stats = await response.json();
                displayOrderStats(stats);
            } catch (error) {
                console.error('Error loading order stats:', error);
            }
        }

        // Load orders with filters
        async function loadOrders(page = 1) {
            try {
                const filters = getFilters();
                const queryParams = new URLSearchParams({
                    limit: ordersPerPage,
                    offset: (page - 1) * ordersPerPage,
                    ...filters
                });
                
                const response = await fetch(`/api/order-history?${queryParams}`);
                const orders = await response.json();
                
                if (Array.isArray(orders)) {
                    displayOrders(orders);
                    updatePagination(page, orders.length);
                } else {
                    console.error('Invalid response format:', orders);
                }
            } catch (error) {
                console.error('Error loading orders:', error);
                showNotification('Error loading orders', 'error');
            }
        }

        // Load order details
        async function loadOrderDetails(orderId) {
            try {
                const response = await fetch(`/api/order-history/${orderId}`);
                const order = await response.json();
                
                if (order) {
                    displayOrderDetails(order);
                } else {
                    showNotification('Order not found', 'error');
                }
            } catch (error) {
                console.error('Error loading order details:', error);
                showNotification('Error loading order details', 'error');
            }
        }

        // Create new order
        async function createOrder(orderData) {
            try {
                const response = await fetch('/api/order-history', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(orderData)
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    showNotification('Order created successfully', 'success');
                    loadOrders(currentPage);
                    closeModal('addOrderModal');
                } else {
                    showNotification(result.error || 'Failed to create order', 'error');
                }
            } catch (error) {
                console.error('Error creating order:', error);
                showNotification('Error creating order', 'error');
            }
        }

        // Update order
        async function updateOrder(orderId, updates) {
            try {
                const response = await fetch(`/api/order-history/${orderId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(updates)
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    showNotification('Order updated successfully', 'success');
                    loadOrders(currentPage);
                    closeModal('editOrderModal');
                } else {
                    showNotification(result.error || 'Failed to update order', 'error');
                }
            } catch (error) {
                console.error('Error updating order:', error);
                showNotification('Error updating order', 'error');
            }
        }

        // Delete order
        async function deleteOrder(orderId) {
            if (!confirm('Are you sure you want to delete this order?')) {
                return;
            }
            
            try {
                const response = await fetch(`/api/order-history/${orderId}`, {
                    method: 'DELETE'
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    showNotification('Order deleted successfully', 'success');
                    loadOrders(currentPage);
                } else {
                    showNotification(result.error || 'Failed to delete order', 'error');
                }
            } catch (error) {
                console.error('Error deleting order:', error);
                showNotification('Error deleting order', 'error');
            }
        }

        // Display orders
        function displayOrders(orders) {
            const container = document.getElementById('ordersContainer');
            
            if (orders.length === 0) {
                container.innerHTML = `
                    <div class="no-orders">
                        <i class="fas fa-shopping-bag"></i>
                        <p>No orders found</p>
                    </div>
                `;
                return;
            }
            
            container.innerHTML = orders.map(order => `
                <div class="order-card">
                    <div class="order-header">
                        <div>
                            <div class="order-id">Order #${order.order_id}</div>
                            <div class="order-date">${new Date(order.order_date).toLocaleDateString()}</div>
                        </div>
                        <div class="text-end">
                            <div class="order-amount">₹${parseFloat(order.final_amount).toLocaleString()}</div>
                            <div class="mt-1">
                                <span class="status-badge status-${order.order_status}">${order.order_status}</span>
                                <span class="payment-status payment-${order.payment_status} ms-2">${order.payment_status}</span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <strong>Customer:</strong> ${order.customer_name}<br>
                            ${order.customer_email ? `<strong>Email:</strong> ${order.customer_email}<br>` : ''}
                            ${order.customer_phone ? `<strong>Phone:</strong> ${order.customer_phone}` : ''}
                        </div>
                        <div class="col-md-6">
                            <strong>Items:</strong> ${order.item_count || 0}<br>
                            <strong>Payment:</strong> ${order.payment_method || 'N/A'}<br>
                            ${order.tracking_number ? `<strong>Tracking:</strong> ${order.tracking_number}` : ''}
                        </div>
                    </div>
                    <div class="mt-3">
                        <button class="btn btn-sm btn-flipkart me-2" onclick="editOrder(${order.id})">
                            <i class="fas fa-edit"></i> Edit
                        </button>
                        <button class="btn btn-sm btn-danger" onclick="deleteOrder(${order.id})">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                    </div>
                </div>
            `).join('');
        }

        // Get filters
        function getFilters() {
            const filters = {};
            const status = document.getElementById('statusFilter').value;
            const payment = document.getElementById('paymentFilter').value;
            const dateFrom = document.getElementById('dateFromFilter').value;
            const dateTo = document.getElementById('dateToFilter').value;
            
            if (status) filters.order_status = status;
            if (payment) filters.payment_status = payment;
            if (dateFrom) filters.date_from = dateFrom;
            if (dateTo) filters.date_to = dateTo;
            
            return filters;
        }

        // Apply filters
        function applyFilters() {
            currentPage = 1;
            loadOrders();
        }

        // Clear filters
        function clearFilters() {
            document.getElementById('statusFilter').value = '';
            document.getElementById('paymentFilter').value = '';
            document.getElementById('dateFromFilter').value = '';
            document.getElementById('dateToFilter').value = '';
            document.getElementById('searchInput').value = '';
            currentPage = 1;
            loadOrders();
        }

        // Update pagination
        function updatePagination(page, totalOrders) {
            const pagination = document.getElementById('pagination');
            const totalPages = Math.ceil(totalOrders / ordersPerPage);
            
            if (totalPages <= 1) {
                pagination.innerHTML = '';
                return;
            }
            
            let paginationHTML = '';
            
            // Previous button
            paginationHTML += `
                <li class="page-item ${page === 1 ? 'disabled' : ''}">
                    <a class="page-link" href="#" onclick="changePage(${page - 1})">Previous</a>
                </li>
            `;
            
            // Page numbers
            for (let i = 1; i <= totalPages; i++) {
                paginationHTML += `
                    <li class="page-item ${i === page ? 'active' : ''}">
                        <a class="page-link" href="#" onclick="changePage(${i})">${i}</a>
                    </li>
                `;
            }
            
            // Next button
            paginationHTML += `
                <li class="page-item ${page === totalPages ? 'disabled' : ''}">
                    <a class="page-link" href="#" onclick="changePage(${page + 1})">Next</a>
                </li>
            `;
            
            pagination.innerHTML = paginationHTML;
        }

        // Change page
        function changePage(page) {
            currentPage = page;
            loadOrders();
        }

        // Show add order modal
        function showAddOrderModal() {
            document.getElementById('orderModalTitle').textContent = 'Add New Order';
            document.getElementById('orderForm').reset();
            document.getElementById('orderId').value = '';
            document.getElementById('orderDate').value = new Date().toISOString().split('T')[0];
            
            const modal = new bootstrap.Modal(document.getElementById('orderModal'));
            modal.show();
        }

        // Edit order
        async function editOrder(orderId) {
            try {
                const response = await fetch(`/api/order-history/${orderId}`);
                const order = await response.json();
                
                if (!order) {
                    alert('Order not found');
                    return;
                }
                
                // Populate form
                document.getElementById('orderModalTitle').textContent = 'Edit Order';
                document.getElementById('orderId').value = order.id;
                document.getElementById('orderIdInput').value = order.order_id;
                document.getElementById('orderDate').value = order.order_date;
                document.getElementById('customerName').value = order.customer_name;
                document.getElementById('customerEmail').value = order.customer_email || '';
                document.getElementById('customerPhone').value = order.customer_phone || '';
                document.getElementById('paymentMethod').value = order.payment_method || 'online';
                document.getElementById('orderStatus').value = order.order_status;
                document.getElementById('paymentStatus').value = order.payment_status;
                document.getElementById('totalAmount').value = order.total_amount;
                document.getElementById('taxAmount').value = order.tax_amount || 0;
                document.getElementById('shippingAmount').value = order.shipping_amount || 0;
                document.getElementById('shippingAddress').value = order.shipping_address || '';
                document.getElementById('orderNotes').value = order.notes || '';
                
                const modal = new bootstrap.Modal(document.getElementById('orderModal'));
                modal.show();
            } catch (error) {
                console.error('Error loading order:', error);
                alert('Error loading order details');
            }
        }

        // Save order
        async function saveOrder() {
            try {
                const formData = {
                    order_id: document.getElementById('orderIdInput').value,
                    order_date: document.getElementById('orderDate').value,
                    customer_name: document.getElementById('customerName').value,
                    customer_email: document.getElementById('customerEmail').value,
                    customer_phone: document.getElementById('customerPhone').value,
                    payment_method: document.getElementById('paymentMethod').value,
                    order_status: document.getElementById('orderStatus').value,
                    payment_status: document.getElementById('paymentStatus').value,
                    total_amount: parseFloat(document.getElementById('totalAmount').value),
                    tax_amount: parseFloat(document.getElementById('taxAmount').value) || 0,
                    shipping_amount: parseFloat(document.getElementById('shippingAmount').value) || 0,
                    final_amount: parseFloat(document.getElementById('totalAmount').value) + 
                                parseFloat(document.getElementById('taxAmount').value || 0) + 
                                parseFloat(document.getElementById('shippingAmount').value || 0),
                    shipping_address: document.getElementById('shippingAddress').value,
                    notes: document.getElementById('orderNotes').value
                };
                
                const orderId = document.getElementById('orderId').value;
                const url = orderId ? `/api/order-history/${orderId}` : '/api/order-history';
                const method = orderId ? 'PUT' : 'POST';
                
                const response = await fetch(url, {
                    method: method,
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });
                
                if (response.ok) {
                    const modal = bootstrap.Modal.getInstance(document.getElementById('orderModal'));
                    modal.hide();
                    loadOrderStats();
                    loadOrders();
                    alert(orderId ? 'Order updated successfully!' : 'Order created successfully!');
                } else {
                    const error = await response.json();
                    alert('Error: ' + (error.error || 'Failed to save order'));
                }
            } catch (error) {
                console.error('Error saving order:', error);
                alert('Error saving order');
            }
        }

        // Delete order
        function deleteOrder(orderId) {
            orderToDelete = orderId;
            const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
        }

        // Confirm delete
        async function confirmDelete() {
            try {
                const response = await fetch(`/api/order-history/${orderToDelete}`, {
                    method: 'DELETE'
                });
                
                if (response.ok) {
                    const modal = bootstrap.Modal.getInstance(document.getElementById('deleteModal'));
                    modal.hide();
                    loadOrderStats();
                    loadOrders();
                    alert('Order deleted successfully!');
                } else {
                    const error = await response.json();
                    alert('Error: ' + (error.error || 'Failed to delete order'));
                }
            } catch (error) {
                console.error('Error deleting order:', error);
                alert('Error deleting order');
            }
        }
    </script>
</body>
</html> 