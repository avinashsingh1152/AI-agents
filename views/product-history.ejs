<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product History & Profit Analytics - <%= sellerData.profile.businessName %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .dashboard-header {
            background: linear-gradient(135deg, #2874f0, #1a5bb8);
            color: white;
            padding: 20px 0;
            margin-bottom: 30px;
        }
        
        .stats-card {
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            margin-bottom: 20px;
            transition: transform 0.3s ease;
        }
        
        .stats-card:hover {
            transform: translateY(-5px);
        }
        
        .stats-icon {
            font-size: 2.5rem;
            margin-bottom: 15px;
        }
        
        .stats-number {
            font-size: 2rem;
            font-weight: bold;
            color: #2874f0;
        }
        
        .stats-label {
            color: #666;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 1px;
        }
        
        .profit-card {
            background: white;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.1);
            margin-bottom: 15px;
            transition: all 0.3s ease;
            border-left: 4px solid #28a745;
        }
        
        .profit-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 20px rgba(0,0,0,0.15);
        }
        
        .profit-margin {
            font-size: 1.2rem;
            font-weight: bold;
        }
        
        .profit-margin.high { color: #28a745; }
        .profit-margin.medium { color: #ffc107; }
        .profit-margin.low { color: #dc3545; }
        
        .history-item {
            background: white;
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 10px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            border-left: 3px solid #2874f0;
        }
        
        .price-change {
            font-weight: bold;
        }
        
        .price-increase { color: #28a745; }
        .price-decrease { color: #dc3545; }
        
        .recommendation {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 10px;
            border-left: 3px solid #ffc107;
        }
        
        .recommendation.urgent {
            border-left-color: #dc3545;
            background: #f8d7da;
        }
        
        .recommendation.good {
            border-left-color: #28a745;
            background: #d4edda;
        }
        
        .btn-flipkart {
            background: #2874f0;
            border: none;
            color: white;
            padding: 8px 20px;
            border-radius: 20px;
            transition: all 0.3s ease;
        }
        
        .btn-flipkart:hover {
            background: #1a5bb8;
            transform: translateY(-2px);
        }
        
        .nav-link {
            color: #2874f0;
            text-decoration: none;
            padding: 10px 15px;
            border-radius: 10px;
            transition: all 0.3s ease;
        }
        
        .nav-link:hover {
            background: #f8f9fa;
            color: #1a5bb8;
        }
        
        .nav-link.active {
            background: #2874f0;
            color: white;
        }
        
        .filter-section {
            background: white;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }
        
        .loading {
            text-align: center;
            padding: 40px;
            color: #666;
        }
        
        .no-data {
            text-align: center;
            padding: 40px;
            color: #666;
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="/seller-dashboard">
                <i class="fas fa-chart-line"></i> Flipkart Seller Hub
            </a>
            <div class="navbar-nav ms-auto">
                <a class="nav-link" href="/seller-dashboard">
                    <i class="fas fa-tachometer-alt"></i> Dashboard
                </a>
                <a class="nav-link" href="/order-history-page">
                    <i class="fas fa-list-alt"></i> Orders
                </a>
                <a class="nav-link active" href="/product-history">
                    <i class="fas fa-chart-line"></i> Product History
                </a>
                <a class="nav-link" href="/whatsapp-clone">
                    <i class="fab fa-whatsapp"></i> Chat
                </a>
                <a class="nav-link" href="/logout">
                    <i class="fas fa-sign-out-alt"></i> Logout
                </a>
            </div>
        </div>
    </nav>

    <!-- Header -->
    <div class="dashboard-header">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h1><i class="fas fa-chart-line"></i> Product History & Profit Analytics</h1>
                    <p>Track your product performance, profit margins, and get smart recommendations</p>
                </div>
                <div class="col-md-4 text-end">
                    <h4><%= sellerData.profile.businessName %></h4>
                    <small>Welcome back, <%= sellerData.profile.ownerName %></small>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <!-- Navigation Tabs -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="nav nav-pills" id="v-pills-tab" role="tablist">
                    <button class="nav-link active" id="profit-analytics-tab" data-bs-toggle="pill" data-bs-target="#profit-analytics" type="button" role="tab">
                        <i class="fas fa-chart-pie"></i> Profit Analytics
                    </button>
                    <button class="nav-link" id="product-history-tab" data-bs-toggle="pill" data-bs-target="#product-history" type="button" role="tab">
                        <i class="fas fa-history"></i> Product History
                    </button>
                    <button class="nav-link" id="recommendations-tab" data-bs-toggle="pill" data-bs-target="#recommendations" type="button" role="tab">
                        <i class="fas fa-lightbulb"></i> Smart Recommendations
                    </button>
                </div>
            </div>
        </div>

        <!-- Tab Content -->
        <div class="tab-content" id="v-pills-tabContent">
            <!-- Profit Analytics Tab -->
            <div class="tab-pane fade show active" id="profit-analytics" role="tabpanel">
                <div class="row mb-4">
                    <div class="col-md-3">
                        <div class="stats-card text-center">
                            <div class="stats-icon text-success">
                                <i class="fas fa-rupee-sign"></i>
                            </div>
                            <div class="stats-number" id="totalProfit">-</div>
                            <div class="stats-label">Total Profit</div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stats-card text-center">
                            <div class="stats-icon text-primary">
                                <i class="fas fa-percentage"></i>
                            </div>
                            <div class="stats-number" id="avgProfitMargin">-</div>
                            <div class="stats-label">Avg Profit Margin</div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stats-card text-center">
                            <div class="stats-icon text-warning">
                                <i class="fas fa-box"></i>
                            </div>
                            <div class="stats-number" id="totalUnitsSold">-</div>
                            <div class="stats-label">Units Sold</div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="stats-card text-center">
                            <div class="stats-icon text-info">
                                <i class="fas fa-chart-line"></i>
                            </div>
                            <div class="stats-number" id="topPerformer">-</div>
                            <div class="stats-label">Top Performer</div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12">
                        <h4 class="section-title">
                            <i class="fas fa-chart-bar"></i> Product Profit Analysis
                        </h4>
                        <div id="profitAnalyticsContainer">
                            <div class="loading">
                                <i class="fas fa-spinner fa-spin"></i>
                                <p>Loading profit analytics...</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Product History Tab -->
            <div class="tab-pane fade" id="product-history" role="tabpanel">
                <div class="filter-section">
                    <div class="row">
                        <div class="col-md-4">
                            <label class="form-label">Select Product</label>
                            <select class="form-control" id="productSelect">
                                <option value="">Choose a product...</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">Time Period</label>
                            <select class="form-control" id="timePeriod">
                                <option value="7">Last 7 days</option>
                                <option value="30" selected>Last 30 days</option>
                                <option value="90">Last 90 days</option>
                                <option value="365">Last year</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">&nbsp;</label>
                            <button class="btn btn-flipkart w-100" onclick="loadProductHistory()">
                                <i class="fas fa-search"></i> Load History
                            </button>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12">
                        <h4 class="section-title">
                            <i class="fas fa-history"></i> Product History
                        </h4>
                        <div id="productHistoryContainer">
                            <div class="no-data">
                                <i class="fas fa-info-circle"></i>
                                <p>Select a product to view its history</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Recommendations Tab -->
            <div class="tab-pane fade" id="recommendations" role="tabpanel">
                <div class="row">
                    <div class="col-12">
                        <h4 class="section-title">
                            <i class="fas fa-lightbulb"></i> Smart Recommendations
                        </h4>
                        <div id="recommendationsContainer">
                            <div class="loading">
                                <i class="fas fa-spinner fa-spin"></i>
                                <p>Loading recommendations...</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Product Modal -->
    <div class="modal fade" id="editProductModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Update Product with Profit Tracking</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="editProductForm">
                        <input type="hidden" id="editProductId">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Product Name</label>
                                    <input type="text" class="form-control" id="editProductName" readonly>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Current Price</label>
                                    <input type="number" class="form-control" id="editCurrentPrice" readonly>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">New Price</label>
                                    <input type="number" class="form-control" id="editNewPrice" step="0.01" min="0">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Purchase Price</label>
                                    <input type="number" class="form-control" id="editPurchasePrice" step="0.01" min="0">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Stock</label>
                                    <input type="number" class="form-control" id="editStock" min="0">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Change Reason</label>
                                    <input type="text" class="form-control" id="editChangeReason" placeholder="e.g., Market adjustment, Cost increase">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                <div class="alert alert-info">
                                    <strong>Profit Impact Preview:</strong>
                                    <div id="profitImpactPreview">Enter new price to see profit impact</div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-flipkart" onclick="saveProductChanges()">
                        <i class="fas fa-save"></i> Update Product
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            loadProfitAnalytics();
            loadRecommendations();
            loadProductSelect();
        });

        // Load profit analytics
        async function loadProfitAnalytics() {
            try {
                const response = await fetch('/api/profit-analytics');
                const analytics = await response.json();
                displayProfitAnalytics(analytics);
            } catch (error) {
                console.error('Error loading profit analytics:', error);
                showNotification('Error loading profit analytics', 'error');
            }
        }

        // Display profit analytics
        function displayProfitAnalytics(analytics) {
            const container = document.getElementById('profitAnalyticsContainer');
            
            if (!analytics || analytics.length === 0) {
                container.innerHTML = `
                    <div class="no-data">
                        <i class="fas fa-chart-bar"></i>
                        <p>No profit data available</p>
                    </div>
                `;
                return;
            }

            // Calculate summary statistics
            const totalProfit = analytics.reduce((sum, item) => sum + parseFloat(item.total_profit || 0), 0);
            const avgProfitMargin = analytics.reduce((sum, item) => sum + parseFloat(item.profit_margin || 0), 0) / analytics.length;
            const totalUnitsSold = analytics.reduce((sum, item) => sum + parseInt(item.units_sold || 0), 0);
            const topPerformer = analytics[0]?.name || 'N/A';

            // Update summary cards
            document.getElementById('totalProfit').textContent = '₹' + totalProfit.toLocaleString();
            document.getElementById('avgProfitMargin').textContent = avgProfitMargin.toFixed(1) + '%';
            document.getElementById('totalUnitsSold').textContent = totalUnitsSold.toLocaleString();
            document.getElementById('topPerformer').textContent = topPerformer;

            // Display product cards
            container.innerHTML = analytics.map(product => `
                <div class="profit-card">
                    <div class="row align-items-center">
                        <div class="col-md-3">
                            <h5>${product.name}</h5>
                            <small class="text-muted">${product.category || 'N/A'}</small>
                        </div>
                        <div class="col-md-2">
                            <div class="profit-margin ${getProfitMarginClass(product.profit_margin)}">
                                ${parseFloat(product.profit_margin || 0).toFixed(1)}%
                            </div>
                            <small>Profit Margin</small>
                        </div>
                        <div class="col-md-2">
                            <div class="stats-number">₹${parseFloat(product.price || 0).toLocaleString()}</div>
                            <small>Selling Price</small>
                        </div>
                        <div class="col-md-2">
                            <div class="stats-number">₹${parseFloat(product.purchase_price || 0).toLocaleString()}</div>
                            <small>Purchase Price</small>
                        </div>
                        <div class="col-md-2">
                            <div class="stats-number">${parseInt(product.units_sold || 0).toLocaleString()}</div>
                            <small>Units Sold</small>
                        </div>
                        <div class="col-md-1">
                            <button class="btn btn-sm btn-flipkart" onclick="editProduct(${product.id})">
                                <i class="fas fa-edit"></i>
                            </button>
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-12">
                            <small class="text-muted">
                                Last price change: ${product.last_price_change ? new Date(product.last_price_change).toLocaleDateString() : 'Never'}
                            </small>
                        </div>
                    </div>
                </div>
            `).join('');
        }

        // Get profit margin class for styling
        function getProfitMarginClass(margin) {
            const marginValue = parseFloat(margin || 0);
            if (marginValue >= 30) return 'high';
            if (marginValue >= 15) return 'medium';
            return 'low';
        }

        // Load product select options
        async function loadProductSelect() {
            try {
                const response = await fetch('/api/products');
                const products = await response.json();
                
                const select = document.getElementById('productSelect');
                select.innerHTML = '<option value="">Choose a product...</option>';
                
                products.forEach(product => {
                    const option = document.createElement('option');
                    option.value = product.id;
                    option.textContent = product.name;
                    select.appendChild(option);
                });
            } catch (error) {
                console.error('Error loading products:', error);
            }
        }

        // Load product history
        async function loadProductHistory() {
            const productId = document.getElementById('productSelect').value;
            const timePeriod = document.getElementById('timePeriod').value;
            
            if (!productId) {
                showNotification('Please select a product', 'warning');
                return;
            }

            try {
                const response = await fetch(`/api/products/${productId}/profit-history?days=${timePeriod}`);
                const history = await response.json();
                displayProductHistory(history);
            } catch (error) {
                console.error('Error loading product history:', error);
                showNotification('Error loading product history', 'error');
            }
        }

        // Display product history
        function displayProductHistory(history) {
            const container = document.getElementById('productHistoryContainer');
            
            if (!history || history.length === 0) {
                container.innerHTML = `
                    <div class="no-data">
                        <i class="fas fa-history"></i>
                        <p>No history found for this product</p>
                    </div>
                `;
                return;
            }

            container.innerHTML = history.map(item => `
                <div class="history-item">
                    <div class="row align-items-center">
                        <div class="col-md-3">
                            <strong>${item.change_type.replace('_', ' ').toUpperCase()}</strong>
                            <br><small class="text-muted">${new Date(item.created_at).toLocaleString()}</small>
                        </div>
                        <div class="col-md-3">
                            <div class="price-change ${item.new_price > item.old_price ? 'price-increase' : 'price-decrease'}">
                                ₹${parseFloat(item.old_price || 0).toLocaleString()} → ₹${parseFloat(item.new_price || 0).toLocaleString()}
                            </div>
                            <small>Price Change</small>
                        </div>
                        <div class="col-md-2">
                            <div class="profit-margin ${getProfitMarginClass(item.new_profit_margin)}">
                                ${parseFloat(item.old_profit_margin || 0).toFixed(1)}% → ${parseFloat(item.new_profit_margin || 0).toFixed(1)}%
                            </div>
                            <small>Profit Margin</small>
                        </div>
                        <div class="col-md-2">
                            <div class="stats-number">₹${parseFloat(item.profit_impact || 0).toLocaleString()}</div>
                            <small>Profit Impact</small>
                        </div>
                        <div class="col-md-2">
                            <small class="text-muted">${item.change_reason || 'No reason provided'}</small>
                        </div>
                    </div>
                </div>
            `).join('');
        }

        // Load recommendations
        async function loadRecommendations() {
            try {
                const response = await fetch('/api/profit-recommendations');
                const recommendations = await response.json();
                displayRecommendations(recommendations);
            } catch (error) {
                console.error('Error loading recommendations:', error);
                showNotification('Error loading recommendations', 'error');
            }
        }

        // Display recommendations
        function displayRecommendations(recommendations) {
            const container = document.getElementById('recommendationsContainer');
            
            if (!recommendations || recommendations.length === 0) {
                container.innerHTML = `
                    <div class="no-data">
                        <i class="fas fa-lightbulb"></i>
                        <p>No recommendations available</p>
                    </div>
                `;
                return;
            }

            container.innerHTML = recommendations.map(item => {
                const isUrgent = item.recommendation.includes('Low') || item.stock_recommendation.includes('Low');
                const isGood = item.recommendation.includes('Good') && item.stock_recommendation.includes('OK');
                
                return `
                    <div class="recommendation ${isUrgent ? 'urgent' : isGood ? 'good' : ''}">
                        <div class="row align-items-center">
                            <div class="col-md-3">
                                <h6>${item.name}</h6>
                                <small class="text-muted">Product ID: ${item.id}</small>
                            </div>
                            <div class="col-md-2">
                                <div class="profit-margin ${getProfitMarginClass(item.profit_margin)}">
                                    ${parseFloat(item.profit_margin || 0).toFixed(1)}%
                                </div>
                                <small>Profit Margin</small>
                            </div>
                            <div class="col-md-2">
                                <div class="stats-number">${parseInt(item.units_sold || 0).toLocaleString()}</div>
                                <small>Units Sold</small>
                            </div>
                            <div class="col-md-2">
                                <div class="stats-number">${parseInt(item.stock || 0).toLocaleString()}</div>
                                <small>Current Stock</small>
                            </div>
                            <div class="col-md-3">
                                <div class="alert alert-sm ${isUrgent ? 'alert-warning' : isGood ? 'alert-success' : 'alert-info'}">
                                    <strong>Recommendation:</strong><br>
                                    ${item.recommendation}<br>
                                    ${item.stock_recommendation}
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            }).join('');
        }

        // Edit product
        async function editProduct(productId) {
            try {
                const response = await fetch(`/api/products/${productId}`);
                const product = await response.json();
                
                document.getElementById('editProductId').value = product.id;
                document.getElementById('editProductName').value = product.name;
                document.getElementById('editCurrentPrice').value = product.price;
                document.getElementById('editNewPrice').value = product.price;
                document.getElementById('editPurchasePrice').value = product.purchase_price || 0;
                document.getElementById('editStock').value = product.stock;
                document.getElementById('editChangeReason').value = '';
                
                // Show modal
                const modal = new bootstrap.Modal(document.getElementById('editProductModal'));
                modal.show();
                
                // Add event listener for price change preview
                document.getElementById('editNewPrice').addEventListener('input', updateProfitPreview);
                document.getElementById('editPurchasePrice').addEventListener('input', updateProfitPreview);
            } catch (error) {
                console.error('Error loading product:', error);
                showNotification('Error loading product details', 'error');
            }
        }

        // Update profit preview
        function updateProfitPreview() {
            const newPrice = parseFloat(document.getElementById('editNewPrice').value) || 0;
            const purchasePrice = parseFloat(document.getElementById('editPurchasePrice').value) || 0;
            const currentPrice = parseFloat(document.getElementById('editCurrentPrice').value) || 0;
            
            if (newPrice > 0 && purchasePrice > 0) {
                const profitMargin = ((newPrice - purchasePrice) / newPrice) * 100;
                const priceChange = newPrice - currentPrice;
                const profitImpact = priceChange * (parseInt(document.getElementById('editStock').value) || 0);
                
                document.getElementById('profitImpactPreview').innerHTML = `
                    <strong>New Profit Margin:</strong> ${profitMargin.toFixed(1)}%<br>
                    <strong>Price Change:</strong> ₹${priceChange.toFixed(2)}<br>
                    <strong>Profit Impact:</strong> ₹${profitImpact.toFixed(2)}
                `;
            } else {
                document.getElementById('profitImpactPreview').textContent = 'Enter new price and purchase price to see profit impact';
            }
        }

        // Save product changes
        async function saveProductChanges() {
            const productId = document.getElementById('editProductId').value;
            const updates = {
                price: parseFloat(document.getElementById('editNewPrice').value),
                purchase_price: parseFloat(document.getElementById('editPurchasePrice').value),
                stock: parseInt(document.getElementById('editStock').value),
                change_reason: document.getElementById('editChangeReason').value
            };

            try {
                const response = await fetch(`/api/products/${productId}/profit`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(updates)
                });

                const result = await response.json();
                
                if (result.success) {
                    showNotification('Product updated successfully!', 'success');
                    
                    // Close modal
                    const modal = bootstrap.Modal.getInstance(document.getElementById('editProductModal'));
                    modal.hide();
                    
                    // Reload data
                    loadProfitAnalytics();
                    loadRecommendations();
                } else {
                    showNotification('Failed to update product', 'error');
                }
            } catch (error) {
                console.error('Error updating product:', error);
                showNotification('Error updating product', 'error');
            }
        }

        // Show notification
        function showNotification(message, type = 'info') {
            // Simple notification - you can enhance this with a proper notification library
            alert(`${type.toUpperCase()}: ${message}`);
        }
    </script>
</body>
</html> 