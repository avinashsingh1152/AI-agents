<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat Logs - <%= sellerData.profile.businessName %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .dashboard-header {
            background: linear-gradient(135deg, #2874f0, #1a5bb8);
            color: white;
            padding: 20px 0;
            margin-bottom: 30px;
        }
        
        .log-card {
            background: white;
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            border-left: 4px solid #2874f0;
        }
        
        .log-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }
        
        .log-type {
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
        }
        
        .log-type.product_list { background: #e3f2fd; color: #1976d2; }
        .log-type.order_list { background: #f3e5f5; color: #7b1fa2; }
        .log-type.business_summary { background: #e8f5e8; color: #388e3c; }
        .log-type.stock_alert { background: #fff3e0; color: #f57c00; }
        .log-type.ai_generated { background: #fce4ec; color: #c2185b; }
        
        .log-message {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 10px;
            margin-bottom: 10px;
            font-size: 0.9rem;
        }
        
        .log-response {
            background: #e3f2fd;
            padding: 15px;
            border-radius: 10px;
            font-size: 0.9rem;
            max-height: 200px;
            overflow-y: auto;
        }
        
        .log-meta {
            display: flex;
            gap: 20px;
            font-size: 0.8rem;
            color: #666;
            margin-top: 10px;
        }
        
        .stats-card {
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            margin-bottom: 20px;
            text-align: center;
        }
        
        .stats-number {
            font-size: 2.5rem;
            font-weight: bold;
            color: #2874f0;
        }
        
        .stats-label {
            color: #666;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 1px;
        }
        
        .nav-link {
            color: #2874f0;
            text-decoration: none;
            padding: 10px 20px;
            border-radius: 20px;
            transition: all 0.3s ease;
        }
        
        .nav-link:hover {
            background: #2874f0;
            color: white;
        }
        
        .filter-section {
            background: white;
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
    </style>
</head>
<body>
    <div class="dashboard-header">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h1><i class="fas fa-comments"></i> AI Chat Logs</h1>
                    <p class="mb-0">Track all your AI assistant interactions</p>
                </div>
                <div class="col-md-4 text-end">
                    <a href="/seller-dashboard" class="nav-link">
                        <i class="fas fa-arrow-left"></i> Back to Dashboard
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <!-- Stats Section -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="stats-card">
                    <div class="stats-number" id="totalInteractions">-</div>
                    <div class="stats-label">Total Interactions</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stats-card">
                    <div class="stats-number" id="avgResponseTime">-</div>
                    <div class="stats-label">Avg Response Time (ms)</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stats-card">
                    <div class="stats-number" id="successRate">-</div>
                    <div class="stats-label">Success Rate</div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stats-card">
                    <div class="stats-number" id="totalTokens">-</div>
                    <div class="stats-label">Total Tokens Used</div>
                </div>
            </div>
        </div>

        <!-- Filter Section -->
        <div class="filter-section">
            <div class="row">
                <div class="col-md-3">
                    <label class="form-label">Response Type</label>
                    <select class="form-select" id="typeFilter">
                        <option value="">All Types</option>
                        <option value="product_list">Product List</option>
                        <option value="order_list">Order List</option>
                        <option value="business_summary">Business Summary</option>
                        <option value="stock_alert">Stock Alert</option>
                        <option value="ai_generated">AI Generated</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Category</label>
                    <select class="form-select" id="categoryFilter">
                        <option value="">All Categories</option>
                        <option value="inventory">Inventory</option>
                        <option value="orders">Orders</option>
                        <option value="analytics">Analytics</option>
                        <option value="general">General</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Date Range</label>
                    <select class="form-select" id="dateFilter">
                        <option value="7">Last 7 days</option>
                        <option value="30" selected>Last 30 days</option>
                        <option value="90">Last 90 days</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label class="form-label">&nbsp;</label>
                    <button class="btn btn-flipkart w-100" onclick="loadChatLogs()">
                        <i class="fas fa-filter"></i> Apply Filters
                    </button>
                </div>
            </div>
        </div>

        <!-- Chat Logs -->
        <div id="chatLogsContainer">
            <div class="text-center">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        </div>

        <!-- Load More Button -->
        <div class="text-center mt-4" id="loadMoreContainer" style="display: none;">
            <button class="btn btn-outline-primary" onclick="loadMoreLogs()">
                <i class="fas fa-plus"></i> Load More
            </button>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let currentOffset = 0;
        const limit = 20;

        // Load chat logs on page load
        document.addEventListener('DOMContentLoaded', function() {
            loadChatLogs();
            loadAnalytics();
        });

        // Load chat logs
        async function loadChatLogs(limit = 50, offset = 0) {
            try {
                const response = await fetch(`/api/chat-logs?limit=${limit}&offset=${offset}`);
                const logs = await response.json();
                
                if (Array.isArray(logs)) {
                    displayChatLogs(logs);
                    updatePagination(limit, offset, logs.length);
                } else {
                    console.error('Invalid response format:', logs);
                }
            } catch (error) {
                console.error('Error loading chat logs:', error);
                showNotification('Error loading chat logs', 'error');
            }
        }

        // Load chat analytics
        async function loadChatAnalytics() {
            try {
                const response = await fetch('/api/chat-analytics?days=30');
                const data = await response.json();
                
                if (data.success) {
                    displayAnalytics(data.analytics, data.popularQueries);
                } else {
                    console.error('Failed to load analytics:', data.message);
                }
            } catch (error) {
                console.error('Error loading analytics:', error);
            }
        }

        function loadMoreLogs() {
            fetch(`/api/chat-logs?limit=${limit}&offset=${currentOffset}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        appendChatLogs(data.logs);
                        currentOffset += limit;
                        
                        if (data.logs.length < limit) {
                            document.getElementById('loadMoreContainer').style.display = 'none';
                        }
                    }
                })
                .catch(error => {
                    console.error('Error loading more logs:', error);
                });
        }

        function loadAnalytics() {
            fetch('/api/chat-analytics?days=30')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        updateStats(data.analytics);
                    }
                })
                .catch(error => {
                    console.error('Error loading analytics:', error);
                });
        }

        function updateStats(analytics) {
            let totalInteractions = 0;
            let totalProcessingTime = 0;
            let successfulInteractions = 0;
            let totalTokens = 0;

            analytics.forEach(item => {
                totalInteractions += parseInt(item.total_interactions);
                totalProcessingTime += parseFloat(item.avg_processing_time || 0) * parseInt(item.total_interactions);
                successfulInteractions += parseInt(item.successful_interactions);
                totalTokens += parseInt(item.total_tokens || 0);
            });

            const avgResponseTime = totalInteractions > 0 ? Math.round(totalProcessingTime / totalInteractions) : 0;
            const successRate = totalInteractions > 0 ? Math.round((successfulInteractions / totalInteractions) * 100) : 0;

            document.getElementById('totalInteractions').textContent = totalInteractions;
            document.getElementById('avgResponseTime').textContent = avgResponseTime;
            document.getElementById('successRate').textContent = successRate + '%';
            document.getElementById('totalTokens').textContent = totalTokens.toLocaleString();
        }

        function displayChatLogs(logs) {
            const container = document.getElementById('chatLogsContainer');
            if (logs.length === 0) {
                container.innerHTML = '<div class="alert alert-info">No chat logs found</div>';
                return;
            }

            container.innerHTML = logs.map(log => createLogCard(log)).join('');
        }

        function appendChatLogs(logs) {
            const container = document.getElementById('chatLogsContainer');
            const newLogs = logs.map(log => createLogCard(log)).join('');
            container.innerHTML += newLogs;
        }

        function createLogCard(log) {
            const date = new Date(log.created_at).toLocaleString();
            const processingTime = log.processing_time_ms ? `${log.processing_time_ms}ms` : 'N/A';
            const tokens = log.tokens_used ? log.tokens_used.toLocaleString() : 'N/A';
            
            return `
                <div class="log-card">
                    <div class="log-header">
                        <div>
                            <span class="log-type ${log.response_type}">${log.response_type.replace('_', ' ').toUpperCase()}</span>
                            <span class="badge bg-secondary ms-2">${log.message_category}</span>
                        </div>
                        <small>${date}</small>
                    </div>
                    
                    <div class="log-message">
                        <strong>User:</strong> ${log.user_message}
                    </div>
                    
                    <div class="log-response">
                        <strong>AI Response:</strong><br>
                        ${log.ai_response.substring(0, 500)}${log.ai_response.length > 500 ? '...' : ''}
                    </div>
                    
                    <div class="log-meta">
                        <span><i class="fas fa-clock"></i> Processing: ${processingTime}</span>
                        <span><i class="fas fa-token"></i> Tokens: ${tokens}</span>
                        <span><i class="fas fa-${log.success ? 'check text-success' : 'times text-danger'}"></i> ${log.success ? 'Success' : 'Failed'}</span>
                    </div>
                </div>
            `;
        }
    </script>
</body>
</html> 