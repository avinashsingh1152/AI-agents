<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Seller Profile - Flipkart Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .profile-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 15px;
            padding: 2rem;
            margin-bottom: 2rem;
        }
        .toggle-switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 34px;
        }
        .toggle-switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }
        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: .4s;
            border-radius: 34px;
        }
        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }
        input:checked + .slider {
            background-color: #2196F3;
        }
        input:checked + .slider:before {
            transform: translateX(26px);
        }
        .form-control:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }
        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
        }
        .btn-primary:hover {
            background: linear-gradient(135deg, #5a6fd8 0%, #6a4190 100%);
        }
        .agent-status {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            padding: 1rem;
            margin-top: 1rem;
        }
        .nav-link {
            color: #667eea;
        }
        .nav-link.active {
            background-color: #667eea !important;
            color: white !important;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container">
            <a class="navbar-brand" href="/seller-dashboard">
                <i class="fas fa-store text-primary"></i> Flipkart Seller Dashboard
            </a>
            <div class="navbar-nav ms-auto">
                <a class="nav-link" href="/seller-dashboard">
                    <i class="fas fa-tachometer-alt"></i> Dashboard
                </a>
                <a class="nav-link active" href="/profile">
                    <i class="fas fa-user"></i> Profile
                </a>
                <a class="nav-link" href="/logout">
                    <i class="fas fa-sign-out-alt"></i> Logout
                </a>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <div class="row">
            <div class="col-md-8">
                <!-- Profile Information -->
                <div class="card shadow-sm">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0">
                            <i class="fas fa-user-circle"></i> Business Profile
                        </h5>
                    </div>
                    <div class="card-body">
                        <form id="profileForm">
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="businessName" class="form-label">Business Name</label>
                                    <input type="text" class="form-control" id="businessName" name="businessName" value="<%= sellerData.profile.businessName %>" required>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="ownerName" class="form-label">Owner Name</label>
                                    <input type="text" class="form-control" id="ownerName" name="ownerName" value="<%= sellerData.profile.ownerName %>" required>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="email" class="form-label">Email</label>
                                    <input type="email" class="form-control" id="email" name="email" value="<%= sellerData.profile.email %>" required>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="phone" class="form-label">Phone</label>
                                    <input type="tel" class="form-control" id="phone" name="phone" value="<%= sellerData.profile.phone %>" required>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label for="address" class="form-label">Address</label>
                                <textarea class="form-control" id="address" name="address" rows="3" required><%= sellerData.profile.address %></textarea>
                            </div>
                            <div class="mb-3">
                                <label for="gstNumber" class="form-label">GST Number</label>
                                <input type="text" class="form-control" id="gstNumber" name="gstNumber" value="<%= sellerData.profile.gstNumber %>" required>
                            </div>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> Update Profile
                            </button>
                        </form>
                    </div>
                </div>
            </div>
            
            <div class="col-md-4">
                <!-- AI Agent Settings -->
                <div class="card shadow-sm">
                    <div class="card-header bg-success text-white">
                        <h5 class="mb-0">
                            <i class="fas fa-robot"></i> AI Agent Settings
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="agent-status">
                            <h6>AI Agent Status</h6>
                            <p class="text-muted mb-3">Enable AI agent to help you manage your dashboard through chat.</p>
                            
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <span>Enable AI Agent</span>
                                <label class="toggle-switch">
                                    <input type="checkbox" id="agentEnabled" <%= agentEnabled ? 'checked' : '' %>>
                                    <span class="slider"></span>
                                </label>
                            </div>
                            
                            <div id="agentStatus" class="alert <%= agentEnabled ? 'alert-success' : 'alert-warning' %>" role="alert">
                                <i class="fas <%= agentEnabled ? 'fa-check-circle' : 'fa-exclamation-triangle' %>"></i>
                                AI Agent is currently <strong><%= agentEnabled ? 'ENABLED' : 'DISABLED' %></strong>
                            </div>
                        </div>
                        
                        <div class="mt-3">
                            <h6>AI Agent Capabilities</h6>
                            <ul class="list-unstyled">
                                <li><i class="fas fa-check text-success"></i> Product Management</li>
                                <li><i class="fas fa-check text-success"></i> Order Management</li>
                                <li><i class="fas fa-check text-success"></i> Business Analytics</li>
                                <li><i class="fas fa-check text-success"></i> Profile Updates</li>
                                <li><i class="fas fa-check text-success"></i> Natural Language Processing</li>
                            </ul>
                        </div>
                    </div>
                </div>

                <!-- Quick Stats -->
                <div class="card shadow-sm mt-3">
                    <div class="card-header bg-info text-white">
                        <h5 class="mb-0">
                            <i class="fas fa-chart-bar"></i> Quick Stats
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row text-center">
                            <div class="col-6">
                                <h4 class="text-primary"><%= sellerData.analytics.totalOrders %></h4>
                                <small class="text-muted">Total Orders</small>
                            </div>
                            <div class="col-6">
                                <h4 class="text-success">â‚¹<%= sellerData.analytics.totalRevenue.toLocaleString() %></h4>
                                <small class="text-muted">Total Revenue</small>
                            </div>
                        </div>
                        <hr>
                        <div class="row text-center">
                            <div class="col-6">
                                <h4 class="text-warning"><%= sellerData.analytics.pendingOrders %></h4>
                                <small class="text-muted">Pending Orders</small>
                            </div>
                            <div class="col-6">
                                <h4 class="text-danger"><%= sellerData.analytics.lowStockItems %></h4>
                                <small class="text-muted">Low Stock Items</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Add event listener for agent toggle
        document.getElementById('agentEnabled').addEventListener('change', toggleAgent);

        // Toggle AI agent
        async function toggleAgent() {
            const agentEnabled = document.getElementById('agentEnabled').checked;
            const statusDiv = document.getElementById('agentStatus');
            
            // Show updating message
            statusDiv.className = 'alert alert-info';
            statusDiv.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Agent is updating...';
            
            try {
                const response = await fetch('/api/agent-toggle', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ enabled: agentEnabled })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    statusDiv.className = `alert ${agentEnabled ? 'alert-success' : 'alert-warning'}`;
                    statusDiv.innerHTML = `
                        <i class="fas ${agentEnabled ? 'fa-check-circle' : 'fa-exclamation-triangle' }"></i>
                        AI Agent is currently <strong>${agentEnabled ? 'ENABLED' : 'DISABLED'}</strong>
                    `;
                    showNotification(result.message, 'success');
                } else {
                    // Revert checkbox state
                    document.getElementById('agentEnabled').checked = !agentEnabled;
                    statusDiv.className = `alert ${!agentEnabled ? 'alert-success' : 'alert-warning'}`;
                    statusDiv.innerHTML = `
                        <i class="fas ${!agentEnabled ? 'fa-check-circle' : 'fa-exclamation-triangle' }"></i>
                        AI Agent is currently <strong>${!agentEnabled ? 'ENABLED' : 'DISABLED'}</strong>
                    `;
                    showNotification(result.message || 'Failed to update agent status', 'error');
                }
            } catch (error) {
                console.error('Error updating agent status:', error);
                // Revert checkbox state
                document.getElementById('agentEnabled').checked = !agentEnabled;
                statusDiv.className = `alert ${!agentEnabled ? 'alert-success' : 'alert-warning'}`;
                statusDiv.innerHTML = `
                    <i class="fas ${!agentEnabled ? 'fa-check-circle' : 'fa-exclamation-triangle' }"></i>
                    AI Agent is currently <strong>${!agentEnabled ? 'ENABLED' : 'DISABLED'}</strong>
                `;
                showNotification('Error updating agent status', 'error');
            }
        }

        // Update profile
        async function updateProfile() {
            const form = document.getElementById('profileForm');
            const formData = new FormData(form);
            const profileData = {};
            
            formData.forEach((value, key) => {
                profileData[key] = value;
            });
            
            try {
                const response = await fetch('/api/update-seller-profile', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(profileData)
                });
                
                const result = await response.json();
                
                if (result.success) {
                    showNotification('Profile updated successfully', 'success');
                } else {
                    showNotification(result.message || 'Failed to update profile', 'error');
                }
            } catch (error) {
                console.error('Error updating profile:', error);
                showNotification('Error updating profile', 'error');
            }
        }

        // Add event listener for profile form
        document.getElementById('profileForm').addEventListener('submit', function(e) {
            e.preventDefault();
            updateProfile();
        });

        // Alert function
        function showNotification(message, type) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
            alertDiv.style.top = '20px';
            alertDiv.style.right = '20px';
            alertDiv.style.zIndex = '9999';
            alertDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(alertDiv);
            
            // Auto remove after 5 seconds
            setTimeout(() => {
                if (alertDiv.parentNode) {
                    alertDiv.parentNode.removeChild(alertDiv);
                }
            }, 5000);
        }
    </script>
</body>
</html> 